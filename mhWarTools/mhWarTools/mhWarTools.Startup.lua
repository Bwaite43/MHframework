mhw.StartUp = function(eventCode, addOnName)	if addOnName == mhw.AddonID then		mhw.Ready = true				SLASH_COMMANDS["/"..mhw.AddonAbbrev] = mhw.CommandLine		SLASH_COMMANDS["/war"] = mhw.WarChat		SLASH_COMMANDS["/warcommand"] = mhw.ToggleCommand		SLASH_COMMANDS["/spamcoms"] = mhw.ToggleComsSpam		SLASH_COMMANDS["/coms"] = mhw.SayComs		SLASH_COMMANDS["/warcoms"] = mhw.WarSayComs		SLASH_COMMANDS["/about"] = mhw.SayAbout		SLASH_COMMANDS["/warabout"] = mhw.WarSayAbout				mhw.SavedVars.opAccount = ZO_SavedVars:New(mhw.AddonID, 1, "opAccount", {}, string.upper(mhw.AddonAbbrev)) or {}		if mhw.SavedVars.opAccount[1] then mhw.op.ACCT = mhw.SavedVars.opAccount[1] end				mhw.SavedVars.opComms = ZO_SavedVars:New(mhw.AddonID, 1, "opComms", {}, string.upper(mhw.AddonAbbrev)) or {}		if mhw.SavedVars.opComms[1] then mhw.op.COMS = mhw.SavedVars.opComms[1] end		if mhw.SavedVars.opComms[2] then mhw.op.SpamComs = mhw.SavedVars.opComms[2] end				mhw.SavedVars.SessionData = ZO_SavedVars:New(mhw.AddonID, 1, "SessionData", {}, string.upper(mhw.AddonAbbrev)) or {}				d(mhw.AddonDescr.." loaded")		d(mhw.Prefix.Default.." FOR COMMAND INFORMATION: /"..mhw.AddonAbbrev.." help")				EVENT_MANAGER:RegisterForEvent(mhw.AddonID, EVENT_GROUP_MEMBER_JOINED, mhw.MemberJoined)				EVENT_MANAGER:RegisterForEvent(mhw.AddonID, OBJECTIVE_CONTROL_EVENT_AREA_NEUTRAL, mhw.CyrodiilObjectiveEvent)		EVENT_MANAGER:RegisterForEvent(mhw.AddonID, OBJECTIVE_CONTROL_EVENT_ASSAULTED, mhw.CyrodiilObjectiveEvent)		EVENT_MANAGER:RegisterForEvent(mhw.AddonID, OBJECTIVE_CONTROL_EVENT_CAPTURED, mhw.CyrodiilObjectiveEvent)		EVENT_MANAGER:RegisterForEvent(mhw.AddonID, OBJECTIVE_CONTROL_EVENT_FLAG_DROPPED, mhw.CyrodiilObjectiveEvent)		EVENT_MANAGER:RegisterForEvent(mhw.AddonID, OBJECTIVE_CONTROL_EVENT_FLAG_RETURNED, mhw.CyrodiilObjectiveEvent)		EVENT_MANAGER:RegisterForEvent(mhw.AddonID, OBJECTIVE_CONTROL_EVENT_FLAG_RETURNED_BY_TIMER, mhw.CyrodiilObjectiveEvent)		EVENT_MANAGER:RegisterForEvent(mhw.AddonID, OBJECTIVE_CONTROL_EVENT_FLAG_TAKEN, mhw.CyrodiilObjectiveEvent)		EVENT_MANAGER:RegisterForEvent(mhw.AddonID, OBJECTIVE_CONTROL_EVENT_FULLY_HELD, mhw.CyrodiilObjectiveEvent)		EVENT_MANAGER:RegisterForEvent(mhw.AddonID, OBJECTIVE_CONTROL_EVENT_LOST, mhw.CyrodiilObjectiveEvent)		EVENT_MANAGER:RegisterForEvent(mhw.AddonID, OBJECTIVE_CONTROL_EVENT_NONE, mhw.CyrodiilObjectiveEvent)		EVENT_MANAGER:RegisterForEvent(mhw.AddonID, OBJECTIVE_CONTROL_EVENT_RECAPTURED, mhw.CyrodiilObjectiveEvent)		EVENT_MANAGER:RegisterForEvent(mhw.AddonID, OBJECTIVE_CONTROL_EVENT_UNDER_ATTACK, mhw.CyrodiilObjectiveEvent)	endend