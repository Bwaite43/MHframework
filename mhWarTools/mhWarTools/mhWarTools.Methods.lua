mhw.channel.ZONE = function() return GetChatChannelId("zone") endmhw.channel.PARTY = function() return GetChatChannelId("party") endmhw.channel.WHISPER = function() return GetChatChannelId("whisper") endmhw.channel.YELL = function() return GetChatChannelId("yell") endmhw.op.IsLead = function() return IsUnitGroupLeader(mhw.op.UnitTag) endmhw.op.IsGrouped = function() return IsUnitGrouped(mhw.op.UnitTag) endmhw.op.InCombat = function() return IsUnitInCombat(mhw.op.UnitTag) endmhw.op.ZoneName = function() return GetUnitZone(mhw.op.UnitTag) endmhw.op.IsPlayerInAvA = function() return IsPlayerInAvAWorld() endmhw.op.AccountMissingNotice = function() d(mhw.Prefix.Default.." Operator Account Not Configured!"); d(mhw.Prefix.Default.." To configure type: /"..mhw.AddonAbbrev.." acct @name"); endmhw.op.ComsMissingNotice = function() d(mhw.Prefix.Default.." Coms Url Not Configured!"); d(mhw.Prefix.Default.." To configure type: /"..mhw.AddonAbbrev.." coms url"); endmhw.InCyrodiil = function() return mhw.op.ZoneName == "Cyrodiil" endmhw.op.CheckAccount = function()	if not mhw.op.ACCT then		mhw.op.AccountMissingNotice()		return false	end	return trueendmhw.WarChat = function(text)	if not mhw.InCyrodiil() then return end	local pfx = mhw.Prefix.Tools	if mhw.Mode.Commander then pfx = mhw.Prefix.Commander end	mhw.Say(mhw.channel.ZONE, pfx.." "..text, nil)	mhw.Say(mhw.channel.PARTY, pfx.." "..text, nil)endmhw.WarSayComs = function(text)	if not mhw.InCyrodiil() then return end	if mhw.op.COMS == nil then return end	local pfx = mhw.Prefix.Tools	if mhw.Mode.Commander then pfx = mhw.Prefix.Commander end	mhw.Say(mhw.Prefix.Tools.." TeamSpeak3 Server: "..mhw.op.COMS, mhw.channel.ZONE, nil)	mhw.Say(mhw.Prefix.Tools.." TeamSpeak3 Server: "..mhw.op.COMS, mhw.channel.PARTY, nil)endmhw.SayComs = function(text)	if mhw.op.COMS == nil then return end	local pfx = mhw.Prefix.Tools	if mhw.Mode.Commander then pfx = mhw.Prefix.Commander end	mhw.Say(mhw.Prefix.Tools.." TeamSpeak3 Server: "..mhw.op.COMS, mhw.channel.PARTY, nil)endmhw.WarSayAbout = function(text)	if not mhw.InCyrodiil() then return end	local pfx = mhw.Prefix.Tools	if mhw.Mode.Commander then pfx = mhw.Prefix.Commander end	mhw.Say(mhw.op.AboutMessage, mhw.channel.ZONE, nil)	mhw.Say(mhw.op.AboutMessage, mhw.channel.PARTY, nil)endmhw.SayAbout = function(text)	local pfx = mhw.Prefix.Tools	if mhw.Mode.Commander then pfx = mhw.Prefix.Commander end	mhw.Say(mhw.op.AboutMessage, mhw.channel.PARTY, nil)endmhw.ToggleCommand = function(text)	if not mhw.InCyrodiil() then return end	if mhw.Mode.Commander then 		mhw.Mode.Commander = false		d(mhw.Prefix.Default.." Command Mode disabled")		mhw.SavedVars.SessionData["group"] = {}		return	end	if mhw.op.IsGrouped() and mhw.op.IsLead() then		mhw.Mode.Commander = true		d(mhw.Prefix.Default.." Command Mode enabled")	endendmhw.ToggleComsSpam = function(text)	if not mhw.InCyrodiil() then return end	if mhw.op.SpamComs == "on" then 		mhw.op.SpamComs = "off" 		mhw.SavedVars.opComms[2] = "off" 		d(mhw.Prefix.Default.." Coms Spam disabled")		return	end	if mhw.op.COMS ~= nil then		mhw.op.SpamComs = "on"		mhw.SavedVars.opComms[2] = "on"		d(mhw.Prefix.Default.." Coms Spam enabled")	else		mhw.op.ComsMissingNotice()	endendmhw.Say = function(message, channel, target)	if not mhw.InCyrodiil() then return end	if message == nil or message == "" then return; end	if channel == mhw.channel.WHISPER then		if mhw.op.CheckAccount() then			SendChatMessage(message, channel, target)		end	else		if channel == mhw.channel.ZONE		or channel == mhw.channel.PARTY		or channel == mhw.channel.YELL		then			SendChatMessage(message, channel, nil)		end	endendmhw.MemberJoined = function(event, memberName)	if not mhw.InCyrodiil() then return end	if mhw.Mode.Commander then		if mhw.op.COMS ~= nil and mhw.op.SpamComs == "on" and memberName ~= "" then			if not mhw.SavedVars.SessionData["group"] then mhw.SavedVars.SessionData["group"] = {} end			local mbrFound = false			for m,s in pairs(mhw.SavedVars.SessionData["group"]) do				if memberName == m then mbrFound = true end			end			if not mbrFound then				mhw.SavedVars.SessionData["group"][memberName] = "seen"				mhw.Say(mhw.Prefix.Tools.." TeamSpeak3 Server: "..mhw.op.COMS, mhw.channel.WHISPER, memberName)			end		end	endendmhw.Parse = function()	if not mhw.Cyrodiil then mhw.CyrodiilObjectiveEvent() end	for numFaction = 1, 3, 1 do		d(mhw.Lists.Alliances[numFaction])		for o,tbl in pairs(mhw.Cyrodiil["objectives"]) do			if tbl["baseFaction"] == numFaction then				if not string.find(tbl["displayName"]," Outpost") then 					d(" .. "..tbl["displayName"]) 					d(" .. .. "..tbl["Farm"]["displayName"]) 					d(" .. .. "..tbl["Mine"]["displayName"]) 					d(" .. .. "..tbl["Lumbermill"]["displayName"]) 				end			end		end		for o,tbl in pairs(mhw.Cyrodiil["objectives"]) do			if tbl["baseFaction"] == numFaction then				if string.find(tbl["displayName"]," Outpost") then 					d(" .. "..tbl["displayName"]) 				end			end		end	endend