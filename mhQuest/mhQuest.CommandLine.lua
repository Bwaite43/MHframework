mhq.CommandLine = function(text)	if not mhq.Ready then return; end	if not text or text == "" or text == "help" then		d("Mostly Harmless Quest Tools accepted commands:")		d("> /mhq  << shows help")		d("> /mhq list << lists all quests")		d("> /mhq help << shows help")		d("> /mhq help abandon << shows abandon quest help")		d("> /mhq help share << shows share quest help")		d("> /mhq help track << shows track quest help")		d("> To EDIT White and Black lists, please edit your /SavedVariables/mhQuest.lua file.")		return	end	if text == "help abandon" then		d("> /mhqa << abandons last quest added")		d("> /mhqa # << abandons specific quest")		d("> /mhqbl << auto-abandons  last quest added")		d("> /mhq clear blacklist << clears the auto-abandon list")		return	end	if text == "help share" then		d("> /mhq always share << always shares every quest")		d("> /mhqs << shares last quest added")		d("> /mhqs # << shares specific quest")		d("> /mhqwl << auto-shares last quest added")		d("> /mhq clear whitelist << clears the auto-share list")		return	end	if text == "help track" then		d("> /mhq always track << auto-tracks last quest added")		d("> /mhqt << tracks last quest added")		d("> /mhqt # << tracks specific quest")		return	end	if text == "abandon" or text == "a" then		mhq.Abandon()		return	end	if text == "blacklist" or text == "bl" then		mhq.BlackList()		return	end	if text == "share" or text == "s" then		mhq.Share()		return	end	if text == "whitelist" or text == "wl" then		mhq.WhiteList()		return	end	if text == "track" or text == "t" then		mhq.Track()		return	end	if text == "clear blacklist" then		mhq.QuestsToAbandon = {}		d("[MHQ] /reloadui  to commit the changes")		return	end	if text == "clear whitelist" then		mhq.QuestsToShare = {}		d("[MHQ] /reloadui  to commit the changes")		return	end		if text == "always share" then		if mhq.SetToAlwaysShare[1] == "on" then			mhq.SetToAlwaysShare[1] = "off"			d("[MHQ] Always Share = off")		else			mhq.SetToAlwaysShare[1] = "on"			d("[MHQ] Always Share = on")		end		return	end		if text == "always track" then		if mhq.SetToAlwaysTrack[1] == "on" then			mhq.SetToAlwaysTrack[1] = "off"			d("[MHQ] Always Track = off")		else			mhq.SetToAlwaysTrack[1] = "on"			d("[MHQ] Always Track = on")		end		return	end		if text == "list" then		mhq.ListAll()	end		local parseText = string.lower(text.."")		if string.find(parseText,"find") then		mhq.Find(text)	endend